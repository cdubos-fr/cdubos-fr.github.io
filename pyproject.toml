[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "cdubos-vitrine"
version = "0.1.0"
description = "Site vitrine personnel construit avec Sphinx"
authors = [ { name = "Clément Dubos" } ]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }
keywords = ["sphinx", "documentation", "portfolio"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Framework :: Sphinx",
  "License :: OSI Approved :: MIT License"
]

# Dépendances nécessaires pour construire le site
# furo apporte le thème, myst-parser pour Markdown, etc.
# sphinx-favicon est non packagé sur PyPI? -> tentative; sinon géré via requirements séparé.
dependencies = [
  "sphinx>=7.3",
  "furo",
  "myst-parser",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-inline-tabs",
  "sphinx-sitemap",
  "sphinxext-opengraph",
  "sphinx-favicon",  # package externe, vérifier disponibilité sur PyPI
]

[project.optional-dependencies]
# Outils de développement (pré-commit reprendra versions épinglées via hooks)
# Garder un set minimal ici pour CI / utilisation manuelle
dev = [
  "pre-commit",
  "tox>=4",
  "black>=24.8.0",
  "flake8>=7.1.0",
  "mypy>=1.11.0",
  "bandit>=1.7.9",
  "commitizen>=3.29.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203"]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
strict = false

[tool.bandit]
skips = ["B101"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = ["pyproject.toml:^version ="]

[tool.tox]
legacy_tox_ini = """
[tox]
requires = tox>=4
isolated_build = True
envlist = py312,precommit

[testenv]
passenv = http_proxy,https_proxy,no_proxy

[testenv:precommit]
deps = pre-commit
commands = pre-commit run --all-files
"""
